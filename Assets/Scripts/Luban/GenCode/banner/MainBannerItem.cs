//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.banner
{

public sealed partial class MainBannerItem :  banner.basePowerItem 
{
    public MainBannerItem(JSONNode _json)  : base(_json) 
    {
        { if(!_json["itemType"].IsNumber) { throw new SerializationException(); }  ItemType = (banner.ItemType)_json["itemType"].AsInt; }
        { var _json1 = _json["qualityPowerList"]; if(!_json1.IsArray) { throw new SerializationException(); } QualityPowerList = new System.Collections.Generic.List<int>(_json1.Count); foreach(JSONNode __e in _json1.Children) { int __v;  { if(!__e.IsNumber) { throw new SerializationException(); }  __v = __e; }  QualityPowerList.Add(__v); }   }
        PostInit();
    }

    public MainBannerItem(int power, banner.ItemType itemType, System.Collections.Generic.List<int> qualityPowerList )  : base(power) 
    {
        this.ItemType = itemType;
        this.QualityPowerList = qualityPowerList;
        PostInit();
    }

    public static MainBannerItem DeserializeMainBannerItem(JSONNode _json)
    {
        return new banner.MainBannerItem(_json);
    }

    public banner.ItemType ItemType { get; private set; }
    public System.Collections.Generic.List<int> QualityPowerList { get; private set; }

    public const int __ID__ = -2097713638;
    public override int GetTypeId() => __ID__;

    public override void Resolve(Dictionary<string, object> _tables)
    {
        base.Resolve(_tables);
        PostResolve();
    }

    public override void TranslateText(System.Func<string, string, string> translator)
    {
        base.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "Power:" + Power + ","
        + "ItemType:" + ItemType + ","
        + "QualityPowerList:" + Bright.Common.StringUtil.CollectionToString(QualityPowerList) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
